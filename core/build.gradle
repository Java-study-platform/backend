plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot'
}

configurations {
    querydsl.extendsFrom annotationProcessor, implementation, compileOnly, runtimeOnly
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.liquibase:liquibase-core'
    //implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    //implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    implementation 'org.springframework.cloud:spring-cloud-starter-zookeeper-config'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

bootJar {
    mainClassName = 'com.study.core.CoreApplication'
}
